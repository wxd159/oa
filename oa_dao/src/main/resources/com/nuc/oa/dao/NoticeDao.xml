<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nuc.oa.dao.NoticeDao">
    <resultMap id="notice" type="Notice">
        <id property="id" column="id" javaType="int"/>
        <result property="createSn" column="create_sn" javaType="String"/>
        <result property="departmentSn" column="department_sn" javaType="String"/>
        <result property="createTime" column="create_time" javaType="java.util.Date"/>
        <result property="title" column="title" javaType="String"/>
        <result property="content" column="content" javaType="String"/>
        <association property="creater" column="create_sn" javaType="Employee">
            <result property="name" column="cname" javaType="String"/>
            <result property="post" column="cpost" javaType="String"/>
        </association>
        <association property="department" column="department_sn" javaType="Department">
            <result property="name" column="dname" javaType="String"/>
        </association>
    </resultMap>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="Notice">
        insert into notice(create_sn,department_sn,create_time,title,content) values(#{createSn},#{departmentSn},#{createTime},#{title},#{content})
    </insert>

    <update id="update" parameterType="Notice">
        update notice set title=#{title},content=#{content} where id=#{id}
    </update>

    <delete id="delete" parameterType="Integer">
        delete from notice where id=#{id}
    </delete>

    <select id="select" resultMap="notice" parameterType="Integer">
        select n.*,e.name cname,e.post cpost,d.name dname
        from notice n
        left join employee e on e.sn=n.create_sn
        left join department d on d.sn=n.department_sn
        where n.id=#{id}
    </select>

    <select id="selectAll" resultMap="notice">
        select n.*,e.name cname,e.post cpost,d.name dname
        from notice n
        left join employee e on e.sn=n.create_sn
        left join department d on d.sn=n.department_sn
        order by create_time desc
    </select>

    <select id="selectByContent" resultMap="notice" parameterType="String">
        select n.*,e.name cname,e.post cpost,d.name dname
        from notice n
        left join employee e on e.sn=n.create_sn
        left join department d on d.sn=n.department_sn
        where content like "%"#{content}"%"
    </select>

</mapper>